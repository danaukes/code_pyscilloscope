Loading plugins phase: Elapsed time ==> 0s.167ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj -d CY8C5888LTI-LP097 -s C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 1s.943ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.078ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Design01.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 Design01.v -verilog
======================================================================

======================================================================
Compiling:  Design01.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 Design01.v -verilog
======================================================================

======================================================================
Compiling:  Design01.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 -verilog Design01.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Thu Aug 20 10:45:31 2020


======================================================================
Compiling:  Design01.v
Program  :   vpp
Options  :    -yv2 -q10 Design01.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Thu Aug 20 10:45:32 2020

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Design01.ctl'.
Design01.v (line 1112, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.

vlogfe:  No errors.


======================================================================
Compiling:  Design01.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 -verilog Design01.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Thu Aug 20 10:45:32 2020

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\codegentemp\Design01.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\codegentemp\Design01.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.

tovif:  No errors.


======================================================================
Compiling:  Design01.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 -verilog Design01.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Thu Aug 20 10:45:32 2020

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\codegentemp\Design01.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\codegentemp\Design01.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\myUSB:dma_complete_0\
	\myUSB:Net_1922\
	\myUSB:dma_complete_1\
	\myUSB:Net_1921\
	\myUSB:dma_complete_2\
	\myUSB:Net_1920\
	\myUSB:dma_complete_3\
	\myUSB:Net_1919\
	\myUSB:dma_complete_4\
	\myUSB:Net_1918\
	\myUSB:dma_complete_5\
	\myUSB:Net_1917\
	\myUSB:dma_complete_6\
	\myUSB:Net_1916\
	\myUSB:dma_complete_7\
	\myUSB:Net_1915\
	\myADC_SEQ:SAR:Net_221\
	\myADC_SEQ:SAR:Net_383\
	\myADC_SEQ:bSAR_SEQ:sw_soc\
	\myADC_SEQ:soc_out\
	\myADC_SEQ:Net_3905\
	\myADC_SEQ:Net_3867\
	\myADC_SEQ:MODULE_1:g1:a0:gx:u0:albi_2\
	\myADC_SEQ:MODULE_1:g1:a0:gx:u0:agbi_2\
	\myADC_SEQ:MODULE_1:g1:a0:gx:u0:albi_1\
	\myADC_SEQ:MODULE_1:g1:a0:gx:u0:agbi_1\
	\myADC_SEQ:MODULE_1:g1:a0:gx:u0:albi_0\
	\myADC_SEQ:MODULE_1:g1:a0:gx:u0:agbi_0\
	\myADC_SEQ:MODULE_1:g1:a0:xneq\
	\myADC_SEQ:MODULE_1:g1:a0:xlt\
	\myADC_SEQ:MODULE_1:g1:a0:xlte\
	\myADC_SEQ:MODULE_1:g1:a0:xgt\
	\myADC_SEQ:MODULE_1:g1:a0:xgte\
	\myADC_SEQ:MODULE_1:lt\
	\myADC_SEQ:MODULE_1:gt\
	\myADC_SEQ:MODULE_1:gte\
	\myADC_SEQ:MODULE_1:lte\
	\myADC_SEQ:MODULE_1:neq\


Deleted 38 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to \myUSB:tmpOE__Dm_net_0\
Aliasing \myUSB:tmpOE__Dp_net_0\ to \myUSB:tmpOE__Dm_net_0\
Aliasing tmpOE__Pin_1_net_0 to \myUSB:tmpOE__Dm_net_0\
Aliasing \myDAC:Net_83\ to zero
Aliasing \myDAC:Net_81\ to zero
Aliasing \myDAC:Net_82\ to zero
Aliasing tmpOE__aout0_net_0 to \myUSB:tmpOE__Dm_net_0\
Aliasing \myADC_SEQ:AMuxHw_2_Decoder_enable\ to \myUSB:tmpOE__Dm_net_0\
Aliasing \myADC_SEQ:SAR:vp_ctl_0\ to zero
Aliasing \myADC_SEQ:SAR:vp_ctl_2\ to zero
Aliasing \myADC_SEQ:SAR:vn_ctl_1\ to zero
Aliasing \myADC_SEQ:SAR:vn_ctl_3\ to zero
Aliasing \myADC_SEQ:SAR:vp_ctl_1\ to zero
Aliasing \myADC_SEQ:SAR:vp_ctl_3\ to zero
Aliasing \myADC_SEQ:SAR:vn_ctl_0\ to zero
Aliasing \myADC_SEQ:SAR:vn_ctl_2\ to zero
Aliasing \myADC_SEQ:SAR:soc\ to zero
Aliasing \myADC_SEQ:bSAR_SEQ:status_7\ to zero
Aliasing \myADC_SEQ:bSAR_SEQ:status_6\ to zero
Aliasing \myADC_SEQ:bSAR_SEQ:status_5\ to zero
Aliasing \myADC_SEQ:bSAR_SEQ:status_4\ to zero
Aliasing \myADC_SEQ:bSAR_SEQ:status_3\ to zero
Aliasing \myADC_SEQ:bSAR_SEQ:status_2\ to zero
Aliasing \myADC_SEQ:bSAR_SEQ:status_1\ to zero
Aliasing Net_173 to \myADC_SEQ:bSAR_SEQ:status_0\
Aliasing \myADC_SEQ:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \myUSB:tmpOE__Dm_net_0\
Aliasing tmpOE__Pin_2_net_0 to \myUSB:tmpOE__Dm_net_0\
Aliasing tmpOE__Pin_3_net_0 to \myUSB:tmpOE__Dm_net_0\
Aliasing \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\\D\ to \myADC_SEQ:MODIN1_5\
Aliasing \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\\D\ to \myADC_SEQ:MODIN1_4\
Aliasing \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\\D\ to \myADC_SEQ:MODIN1_3\
Aliasing \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\\D\ to \myADC_SEQ:MODIN1_2\
Aliasing \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\\D\ to \myADC_SEQ:MODIN1_1\
Aliasing \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\\D\ to \myADC_SEQ:MODIN1_0\
Removing Rhs of wire one[9] = \myUSB:tmpOE__Dm_net_0\[3]
Removing Lhs of wire \myUSB:tmpOE__Dp_net_0\[12] = one[9]
Removing Lhs of wire tmpOE__Pin_1_net_0[64] = one[9]
Removing Lhs of wire \myDAC:Net_83\[71] = zero[4]
Removing Lhs of wire \myDAC:Net_81\[72] = zero[4]
Removing Lhs of wire \myDAC:Net_82\[73] = zero[4]
Removing Lhs of wire tmpOE__aout0_net_0[78] = one[9]
Removing Lhs of wire \myADC_SEQ:AMuxHw_2_Decoder_enable\[83] = one[9]
Removing Lhs of wire \myADC_SEQ:cmp_vv_vv_MODGEN_1\[85] = \myADC_SEQ:MODULE_1:g1:a0:xeq\[419]
Removing Rhs of wire \myADC_SEQ:clock\[86] = \myADC_SEQ:Net_3874\[319]
Removing Rhs of wire \myADC_SEQ:ch_addr_5\[88] = \myADC_SEQ:bSAR_SEQ:count_5\[286]
Removing Rhs of wire \myADC_SEQ:ch_addr_4\[90] = \myADC_SEQ:bSAR_SEQ:count_4\[287]
Removing Rhs of wire \myADC_SEQ:ch_addr_3\[92] = \myADC_SEQ:bSAR_SEQ:count_3\[288]
Removing Rhs of wire \myADC_SEQ:ch_addr_2\[94] = \myADC_SEQ:bSAR_SEQ:count_2\[289]
Removing Rhs of wire \myADC_SEQ:ch_addr_1\[96] = \myADC_SEQ:bSAR_SEQ:count_1\[290]
Removing Rhs of wire \myADC_SEQ:ch_addr_0\[98] = \myADC_SEQ:bSAR_SEQ:count_0\[291]
Removing Lhs of wire \myADC_SEQ:SAR:vp_ctl_0\[231] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:vp_ctl_2\[232] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:vn_ctl_1\[233] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:vn_ctl_3\[234] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:vp_ctl_1\[235] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:vp_ctl_3\[236] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:vn_ctl_0\[237] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:vn_ctl_2\[238] = zero[4]
Removing Lhs of wire \myADC_SEQ:SAR:Net_188\[239] = \myADC_SEQ:clock\[86]
Removing Lhs of wire \myADC_SEQ:SAR:soc\[245] = zero[4]
Removing Rhs of wire \myADC_SEQ:bSAR_SEQ:enable\[276] = \myADC_SEQ:bSAR_SEQ:control_0\[277]
Removing Rhs of wire \myADC_SEQ:bSAR_SEQ:load_period\[278] = \myADC_SEQ:bSAR_SEQ:control_1\[279]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:status_7\[292] = zero[4]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:status_6\[293] = zero[4]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:status_5\[294] = zero[4]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:status_4\[295] = zero[4]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:status_3\[296] = zero[4]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:status_2\[297] = zero[4]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:status_1\[298] = zero[4]
Removing Rhs of wire \myADC_SEQ:bSAR_SEQ:status_0\[299] = \myADC_SEQ:bSAR_SEQ:nrq_edge_detect_reg\[300]
Removing Rhs of wire Net_173[307] = \myADC_SEQ:bSAR_SEQ:status_0\[299]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newa_5\[330] = \myADC_SEQ:MODIN1_5\[331]
Removing Lhs of wire \myADC_SEQ:MODIN1_5\[331] = \myADC_SEQ:ch_addr_5\[88]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newa_4\[332] = \myADC_SEQ:MODIN1_4\[333]
Removing Lhs of wire \myADC_SEQ:MODIN1_4\[333] = \myADC_SEQ:ch_addr_4\[90]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newa_3\[334] = \myADC_SEQ:MODIN1_3\[335]
Removing Lhs of wire \myADC_SEQ:MODIN1_3\[335] = \myADC_SEQ:ch_addr_3\[92]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newa_2\[336] = \myADC_SEQ:MODIN1_2\[337]
Removing Lhs of wire \myADC_SEQ:MODIN1_2\[337] = \myADC_SEQ:ch_addr_2\[94]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newa_1\[338] = \myADC_SEQ:MODIN1_1\[339]
Removing Lhs of wire \myADC_SEQ:MODIN1_1\[339] = \myADC_SEQ:ch_addr_1\[96]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newa_0\[340] = \myADC_SEQ:MODIN1_0\[341]
Removing Lhs of wire \myADC_SEQ:MODIN1_0\[341] = \myADC_SEQ:ch_addr_0\[98]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newb_5\[342] = \myADC_SEQ:MODIN2_5\[343]
Removing Lhs of wire \myADC_SEQ:MODIN2_5\[343] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\[87]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newb_4\[344] = \myADC_SEQ:MODIN2_4\[345]
Removing Lhs of wire \myADC_SEQ:MODIN2_4\[345] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\[89]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newb_3\[346] = \myADC_SEQ:MODIN2_3\[347]
Removing Lhs of wire \myADC_SEQ:MODIN2_3\[347] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\[91]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newb_2\[348] = \myADC_SEQ:MODIN2_2\[349]
Removing Lhs of wire \myADC_SEQ:MODIN2_2\[349] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\[93]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newb_1\[350] = \myADC_SEQ:MODIN2_1\[351]
Removing Lhs of wire \myADC_SEQ:MODIN2_1\[351] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\[95]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:newb_0\[352] = \myADC_SEQ:MODIN2_0\[353]
Removing Lhs of wire \myADC_SEQ:MODIN2_0\[353] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\[97]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:dataa_5\[354] = \myADC_SEQ:ch_addr_5\[88]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:dataa_4\[355] = \myADC_SEQ:ch_addr_4\[90]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:dataa_3\[356] = \myADC_SEQ:ch_addr_3\[92]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:dataa_2\[357] = \myADC_SEQ:ch_addr_2\[94]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:dataa_1\[358] = \myADC_SEQ:ch_addr_1\[96]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:dataa_0\[359] = \myADC_SEQ:ch_addr_0\[98]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:datab_5\[360] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\[87]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:datab_4\[361] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\[89]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:datab_3\[362] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\[91]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:datab_2\[363] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\[93]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:datab_1\[364] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\[95]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:datab_0\[365] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\[97]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:a_5\[366] = \myADC_SEQ:ch_addr_5\[88]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:a_4\[367] = \myADC_SEQ:ch_addr_4\[90]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:a_3\[368] = \myADC_SEQ:ch_addr_3\[92]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:a_2\[369] = \myADC_SEQ:ch_addr_2\[94]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:a_1\[370] = \myADC_SEQ:ch_addr_1\[96]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:a_0\[371] = \myADC_SEQ:ch_addr_0\[98]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:b_5\[372] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\[87]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:b_4\[373] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\[89]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:b_3\[374] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\[91]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:b_2\[375] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\[93]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:b_1\[376] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\[95]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:b_0\[377] = \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\[97]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:aeqb_0\[384] = one[9]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_0\[385] = \myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_0\[383]
Removing Lhs of wire \myADC_SEQ:MODULE_1:g1:a0:gx:u0:eqi_0\[391] = \myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_5\[390]
Removing Rhs of wire \myADC_SEQ:MODULE_1:g1:a0:xeq\[419] = \myADC_SEQ:MODULE_1:g1:a0:gx:u0:aeqb_1\[392]
Removing Lhs of wire tmpOE__Pin_2_net_0[431] = one[9]
Removing Lhs of wire tmpOE__Pin_3_net_0[437] = one[9]
Removing Lhs of wire \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\\D\[442] = \myADC_SEQ:ch_addr_5\[88]
Removing Lhs of wire \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\\D\[443] = \myADC_SEQ:ch_addr_4\[90]
Removing Lhs of wire \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\\D\[444] = \myADC_SEQ:ch_addr_3\[92]
Removing Lhs of wire \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\\D\[445] = \myADC_SEQ:ch_addr_2\[94]
Removing Lhs of wire \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\\D\[446] = \myADC_SEQ:ch_addr_1\[96]
Removing Lhs of wire \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\\D\[447] = \myADC_SEQ:ch_addr_0\[98]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:nrq_edge_detect_reg\\D\[512] = \myADC_SEQ:bSAR_SEQ:nrq_edge_detect\[306]
Removing Lhs of wire \myADC_SEQ:bSAR_SEQ:nrq_reg\\D\[514] = \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\[303]

------------------------------------------------------
Aliased 0 equations, 99 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\)
	OR (not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\)
	OR (not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\)
	OR (not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\)
	OR (not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\myADC_SEQ:MODULE_1:g1:a0:xeq\' (cost = 64):
\myADC_SEQ:MODULE_1:g1:a0:xeq\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \myADC_SEQ:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\myADC_SEQ:AMuxHw_2_Decoder_is_active\ <= ((not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and not \myADC_SEQ:ch_addr_0\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and not \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and not \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and not \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and not \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (not \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and not \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\)
	OR (\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ and \myADC_SEQ:ch_addr_5\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ and \myADC_SEQ:ch_addr_4\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ and \myADC_SEQ:ch_addr_3\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ and \myADC_SEQ:ch_addr_2\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ and \myADC_SEQ:ch_addr_1\ and \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ and \myADC_SEQ:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 21 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------

------------------------------------------------------
Aliased 0 equations, 0 wires.
------------------------------------------------------

Last attempt to remove unused logic - pass 1:


Last attempt to remove unused logic - pass 2:


topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj" -dcpsoc3 Design01.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 0s.931ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.3.0.1445, Family: PSoC3, Started at: Thursday, 20 August 2020 10:45:32
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\danaukes\Documents\PSoC Creator\Workspace01\Design01.cydsn\Design01.cyprj -d CY8C5888LTI-LP097 Design01.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.019ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \myADC_SEQ:MODULE_1:g1:a0:gx:u0:lti_1\ kept \myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \myADC_SEQ:MODULE_1:g1:a0:gx:u0:gti_1\ kept \myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \myADC_SEQ:MODULE_1:g1:a0:gx:u0:lti_0\ kept \myADC_SEQ:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \myADC_SEQ:MODULE_1:g1:a0:gx:u0:gti_0\ kept \myADC_SEQ:MODULE_1:g1:a0:gx:u0:gt_2\
Assigning clock myADC_SEQ_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'myADC_SEQ_IntClock'. Fanout=73, Signal=\myADC_SEQ:clock\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \myADC_SEQ:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: myADC_SEQ_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \myADC_SEQ:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: myADC_SEQ_IntClock, EnableOut: \myADC_SEQ:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \myADC_SEQ:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: myADC_SEQ_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: myADC_SEQ_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 2 pin(s) will be assigned a location by the fitter: \myUSB:Dm(0)\, \myUSB:Dp(0)\


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = \myUSB:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \myUSB:Dm(0)\__PA ,
            analog_term => \myUSB:Net_597\ ,
            pad => \myUSB:Dm(0)_PAD\ );

    Pin : Name = \myUSB:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \myUSB:Dp(0)\__PA ,
            analog_term => \myUSB:Net_1000\ ,
            pad => \myUSB:Dp(0)_PAD\ );

    Pin : Name = Pin_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_1(0)__PA ,
            analog_term => Net_174 ,
            pad => Pin_1(0)_PAD ,
            pin_input => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = aout0(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => aout0(0)__PA ,
            analog_term => Net_12 ,
            pad => aout0(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_2(0)__PA ,
            analog_term => Net_175 ,
            pad => Pin_2(0)_PAD ,
            pin_input => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Pin_3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_3(0)__PA ,
            analog_term => Net_177 ,
            pad => Pin_3(0)_PAD ,
            pin_input => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * !\myADC_SEQ:ch_addr_5\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * !\myADC_SEQ:ch_addr_4\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * !\myADC_SEQ:ch_addr_3\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * !\myADC_SEQ:ch_addr_2\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * \myADC_SEQ:ch_addr_1\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * !\myADC_SEQ:ch_addr_1\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ * \myADC_SEQ:ch_addr_0\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ * !\myADC_SEQ:ch_addr_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * \myADC_SEQ:ch_addr_5\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * \myADC_SEQ:ch_addr_4\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * \myADC_SEQ:ch_addr_3\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * \myADC_SEQ:ch_addr_2\
            + \myADC_SEQ:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\myADC_SEQ:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_172 * !\myADC_SEQ:bSAR_SEQ:load_period\
        );
        Output = \myADC_SEQ:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_5\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_4\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_3\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_2\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_1\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_173, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\myADC_SEQ:bSAR_SEQ:nrq_reg\
        );
        Output = Net_173 (fanout=3)

    MacroCell: Name=\myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_173
            + \myADC_SEQ:Net_3935\
        );
        Output = \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\myADC_SEQ:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \myADC_SEQ:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\myADC_SEQ:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \myADC_SEQ:clock\ ,
            status_0 => Net_173 ,
            clk_en => \myADC_SEQ:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\myADC_SEQ:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \myADC_SEQ:nrq\ ,
            out => \myADC_SEQ:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\myADC_SEQ:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \myADC_SEQ:clock\ ,
            control_7 => \myADC_SEQ:bSAR_SEQ:control_7\ ,
            control_6 => \myADC_SEQ:bSAR_SEQ:control_6\ ,
            control_5 => \myADC_SEQ:bSAR_SEQ:control_5\ ,
            control_4 => \myADC_SEQ:bSAR_SEQ:control_4\ ,
            control_3 => \myADC_SEQ:bSAR_SEQ:control_3\ ,
            control_2 => \myADC_SEQ:bSAR_SEQ:control_2\ ,
            control_1 => \myADC_SEQ:bSAR_SEQ:load_period\ ,
            control_0 => \myADC_SEQ:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\myADC_SEQ:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \myADC_SEQ:clock\ ,
            load => \myADC_SEQ:bSAR_SEQ:load_period\ ,
            enable => \myADC_SEQ:bSAR_SEQ:cnt_enable\ ,
            count_6 => \myADC_SEQ:bSAR_SEQ:count_6\ ,
            count_5 => \myADC_SEQ:ch_addr_5\ ,
            count_4 => \myADC_SEQ:ch_addr_4\ ,
            count_3 => \myADC_SEQ:ch_addr_3\ ,
            count_2 => \myADC_SEQ:ch_addr_2\ ,
            count_1 => \myADC_SEQ:ch_addr_1\ ,
            count_0 => \myADC_SEQ:ch_addr_0\ ,
            tc => \myADC_SEQ:bSAR_SEQ:cnt_tc\ ,
            clk_en => \myADC_SEQ:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\myADC_SEQ:TempBuf\
        PORT MAP (
            dmareq => \myADC_SEQ:Net_3830\ ,
            termin => zero ,
            termout => \myADC_SEQ:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\myADC_SEQ:FinalBuf\
        PORT MAP (
            dmareq => \myADC_SEQ:Net_3698\ ,
            termin => zero ,
            termout => \myADC_SEQ:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\myUSB:dp_int\
        PORT MAP (
            interrupt => \myUSB:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myUSB:ep_3\
        PORT MAP (
            interrupt => \myUSB:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myUSB:ep_2\
        PORT MAP (
            interrupt => \myUSB:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myUSB:ep_1\
        PORT MAP (
            interrupt => \myUSB:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myUSB:ep_0\
        PORT MAP (
            interrupt => \myUSB:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myUSB:bus_reset\
        PORT MAP (
            interrupt => \myUSB:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myUSB:arb_int\
        PORT MAP (
            interrupt => \myUSB:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myUSB:sof_int\
        PORT MAP (
            interrupt => Net_1 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\myADC_SEQ:IRQ\
        PORT MAP (
            interrupt => Net_173 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    1 :    7 :    8 : 12.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    9 :   23 :   32 : 28.13 %
IO                            :    9 :   39 :   48 : 18.75 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :   76 :  116 :  192 : 39.58 %
  Unique P-terms              :   88 :  296 :  384 : 22.92 %
  Total P-terms               :   88 :      :      :        
  Datapath Cells              :    0 :   24 :   24 :  0.00 %
  Status Cells                :    3 :   21 :   24 : 12.50 %
    Status Registers          :    1 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    2 :   22 :   24 :  8.33 %
    Control Registers         :    1 :      :      :        
    Count7 Cells              :    1 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    1 :    3 :    4 : 25.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.202ms
Tech Mapping phase: Elapsed time ==> 0s.310ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_178" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_180" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_182" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_183" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_185" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_187" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_188" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_190" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_192" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_193" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_195" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_197" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_198" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_200" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_202" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_203" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_205" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_207" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_208" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_210" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_212" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_213" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_215" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_217" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_218" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_220" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_222" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_223" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_225" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_227" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_228" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_230" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_232" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_233" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_235" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_237" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_238" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_240" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_242" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_243" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_245" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_247" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_248" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_250" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_252" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_253" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_254" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_255" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_256" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_257" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_258" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_259" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_260" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_261" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_262" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_263" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_264" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_265" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_266" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_267" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_268" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_0@[IOP=(2)][IoId=(0)] : Pin_1(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : Pin_2(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : Pin_3(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : aout0(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \myUSB:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \myUSB:Dp(0)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \myADC_SEQ:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \myADC_SEQ:SAR:vRef_Vdda_1\
VIDAC[2]@[FFB(VIDAC,2)] : \myDAC:viDAC8\
USB[0]@[FFB(USB,0)] : \myUSB:USB\
Log: apr.M0058: The analog placement iterative improvement is 34% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 75% done. (App=cydsfit)
Analog Placement Results:
IO_0@[IOP=(2)][IoId=(0)] : Pin_1(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : Pin_2(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : Pin_3(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : aout0(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \myUSB:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \myUSB:Dp(0)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \myADC_SEQ:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \myADC_SEQ:SAR:vRef_Vdda_1\
VIDAC[2]@[FFB(VIDAC,2)] : \myDAC:viDAC8\
USB[0]@[FFB(USB,0)] : \myUSB:USB\

Analog Placement phase: Elapsed time ==> 2s.628ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.005ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \myADC_SEQ:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_174 {
    p2_0
  }
  Net: Net_175 {
    p2_1
  }
  Net: Net_177 {
    p2_2
  }
  Net: Net_178 {
  }
  Net: Net_180 {
  }
  Net: Net_182 {
  }
  Net: Net_183 {
  }
  Net: Net_185 {
  }
  Net: Net_187 {
  }
  Net: Net_188 {
  }
  Net: Net_190 {
  }
  Net: Net_192 {
  }
  Net: Net_193 {
  }
  Net: Net_195 {
  }
  Net: Net_197 {
  }
  Net: Net_198 {
  }
  Net: Net_200 {
  }
  Net: Net_202 {
  }
  Net: Net_203 {
  }
  Net: Net_205 {
  }
  Net: Net_207 {
  }
  Net: Net_208 {
  }
  Net: Net_210 {
  }
  Net: Net_212 {
  }
  Net: Net_213 {
  }
  Net: Net_215 {
  }
  Net: Net_217 {
  }
  Net: Net_218 {
  }
  Net: Net_220 {
  }
  Net: Net_222 {
  }
  Net: Net_223 {
  }
  Net: Net_225 {
  }
  Net: Net_227 {
  }
  Net: Net_228 {
  }
  Net: Net_230 {
  }
  Net: Net_232 {
  }
  Net: Net_233 {
  }
  Net: Net_235 {
  }
  Net: Net_237 {
  }
  Net: Net_238 {
  }
  Net: Net_240 {
  }
  Net: Net_242 {
  }
  Net: Net_243 {
  }
  Net: Net_245 {
  }
  Net: Net_247 {
  }
  Net: Net_248 {
  }
  Net: Net_250 {
  }
  Net: Net_252 {
  }
  Net: Net_253 {
  }
  Net: Net_254 {
  }
  Net: Net_255 {
  }
  Net: Net_256 {
  }
  Net: Net_257 {
  }
  Net: Net_258 {
  }
  Net: Net_259 {
  }
  Net: Net_260 {
  }
  Net: Net_261 {
  }
  Net: Net_262 {
  }
  Net: Net_263 {
  }
  Net: Net_264 {
  }
  Net: Net_265 {
  }
  Net: Net_266 {
  }
  Net: Net_267 {
  }
  Net: Net_268 {
  }
  Net: \myADC_SEQ:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \myADC_SEQ:SAR:Net_209\ {
  }
  Net: \myADC_SEQ:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: Net_12 {
    p0_0
    agl4_x_p0_0
    agl4
    agl4_x_vidac_2_vout
    vidac_2_vout
  }
  Net: \myDAC:Net_77\ {
  }
  Net: AmuxNet::\myADC_SEQ:AMuxHw_2\ {
    sar_0_vplus
    agl1_x_sar_0_vplus
    agl1
    agl1_x_p2_1
    agl2_x_sar_0_vplus
    agl2
    agl2_x_p2_2
    agl0_x_sar_0_vplus
    agl0
    agl0_x_p2_0
    p2_1
    p2_2
    p2_0
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \myADC_SEQ:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \myADC_SEQ:SAR:Net_126\
  sar_0_vminus                                     -> \myADC_SEQ:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \myADC_SEQ:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \myADC_SEQ:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \myADC_SEQ:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \myADC_SEQ:SAR:Net_235\
  sar_0_vref                                       -> \myADC_SEQ:SAR:Net_235\
  p0_0                                             -> Net_12
  agl4_x_p0_0                                      -> Net_12
  agl4                                             -> Net_12
  agl4_x_vidac_2_vout                              -> Net_12
  vidac_2_vout                                     -> Net_12
  sar_0_vplus                                      -> \myADC_SEQ:Net_2803\
  p2_0                                             -> Net_174
  p2_1                                             -> Net_175
  p2_2                                             -> Net_177
  agl1_x_sar_0_vplus                               -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl1                                             -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl1_x_p2_1                                      -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl2_x_sar_0_vplus                               -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl2                                             -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl2_x_p2_2                                      -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl0_x_sar_0_vplus                               -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl0                                             -> AmuxNet::\myADC_SEQ:AMuxHw_2\
  agl0_x_p2_0                                      -> AmuxNet::\myADC_SEQ:AMuxHw_2\
}
Mux Info {
  Mux: \myADC_SEQ:AMuxHw_2\ {
     Mouth: \myADC_SEQ:Net_2803\
     Guts:  AmuxNet::\myADC_SEQ:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_174
      Outer: agl0_x_p2_0
      Inner: agl0_x_sar_0_vplus
      Path {
        p2_0
        agl0_x_p2_0
        agl0
        agl0_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_175
      Outer: agl1_x_p2_1
      Inner: agl1_x_sar_0_vplus
      Path {
        p2_1
        agl1_x_p2_1
        agl1
        agl1_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_177
      Outer: agl2_x_p2_2
      Inner: agl2_x_sar_0_vplus
      Path {
        p2_2
        agl2_x_p2_2
        agl2
        agl2_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_178
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_180
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_182
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_183
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_185
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_187
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_188
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_190
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_192
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_193
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_195
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_197
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_198
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_200
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_202
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_203
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_205
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_207
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_208
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_210
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_212
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_213
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_215
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_217
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_218
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_220
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_222
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_223
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_225
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_227
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_228
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_230
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_232
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_233
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_235
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_237
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_238
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_240
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_242
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_243
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_245
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_247
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_248
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_250
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_252
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_253
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_254
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_255
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_256
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_257
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_258
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_259
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_260
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_261
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_262
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_263
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_264
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_265
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_266
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_267
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_268
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.266ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 2.7 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   24 :   24 :   48 :  50.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.38
                   Pterms :            3.67
               Macrocells :            3.17
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.001ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.045ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         12 :       8.00 :       6.33
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_173, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\myADC_SEQ:bSAR_SEQ:nrq_reg\
        );
        Output = Net_173 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \myADC_SEQ:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,3)][LB=1] #macrocells=1, #inputs=3, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_173
            + \myADC_SEQ:Net_3935\
        );
        Output = \myADC_SEQ:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

synccell: Name =\myADC_SEQ:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \myADC_SEQ:nrq\ ,
        out => \myADC_SEQ:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\myADC_SEQ:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \myADC_SEQ:clock\ ,
        status_0 => Net_173 ,
        clk_en => \myADC_SEQ:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_5\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_4\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_3\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * !\myADC_SEQ:ch_addr_5\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * !\myADC_SEQ:ch_addr_4\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * !\myADC_SEQ:ch_addr_3\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * !\myADC_SEQ:ch_addr_2\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * \myADC_SEQ:ch_addr_1\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * !\myADC_SEQ:ch_addr_1\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ * \myADC_SEQ:ch_addr_0\
            + \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\ * !\myADC_SEQ:ch_addr_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * \myADC_SEQ:ch_addr_5\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * \myADC_SEQ:ch_addr_4\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * \myADC_SEQ:ch_addr_3\
            + !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * \myADC_SEQ:ch_addr_2\
            + \myADC_SEQ:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\myADC_SEQ:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \myADC_SEQ:clock\ ,
        load => \myADC_SEQ:bSAR_SEQ:load_period\ ,
        enable => \myADC_SEQ:bSAR_SEQ:cnt_enable\ ,
        count_6 => \myADC_SEQ:bSAR_SEQ:count_6\ ,
        count_5 => \myADC_SEQ:ch_addr_5\ ,
        count_4 => \myADC_SEQ:ch_addr_4\ ,
        count_3 => \myADC_SEQ:ch_addr_3\ ,
        count_2 => \myADC_SEQ:ch_addr_2\ ,
        count_1 => \myADC_SEQ:ch_addr_1\ ,
        count_0 => \myADC_SEQ:ch_addr_0\ ,
        tc => \myADC_SEQ:bSAR_SEQ:cnt_tc\ ,
        clk_en => \myADC_SEQ:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\myADC_SEQ:bSAR_SEQ:enable\)

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_172 * !\myADC_SEQ:bSAR_SEQ:load_period\
        );
        Output = \myADC_SEQ:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_2\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:ch_addr_1\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\myADC_SEQ:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \myADC_SEQ:clock\ ,
        control_7 => \myADC_SEQ:bSAR_SEQ:control_7\ ,
        control_6 => \myADC_SEQ:bSAR_SEQ:control_6\ ,
        control_5 => \myADC_SEQ:bSAR_SEQ:control_5\ ,
        control_4 => \myADC_SEQ:bSAR_SEQ:control_4\ ,
        control_3 => \myADC_SEQ:bSAR_SEQ:control_3\ ,
        control_2 => \myADC_SEQ:bSAR_SEQ:control_2\ ,
        control_1 => \myADC_SEQ:bSAR_SEQ:load_period\ ,
        control_0 => \myADC_SEQ:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\myADC_SEQ:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\myADC_SEQ:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \myADC_SEQ:AMuxHw_2_Decoder_is_active\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_5\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_4\ * 
              !\myADC_SEQ:AMuxHw_2_Decoder_old_id_3\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_2\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_1\ * 
              \myADC_SEQ:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \myADC_SEQ:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,0)] is empty.
UDB [UDB=(2,1)] is empty.
UDB [UDB=(2,2)] is empty.
UDB [UDB=(2,3)] is empty.
UDB [UDB=(2,4)] is empty.
UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] is empty.
UDB [UDB=(3,1)] is empty.
UDB [UDB=(3,2)] is empty.
UDB [UDB=(3,3)] is empty.
UDB [UDB=(3,4)] is empty.
UDB [UDB=(3,5)] is empty.
Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\myADC_SEQ:IRQ\
        PORT MAP (
            interrupt => Net_173 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\myUSB:ep_1\
        PORT MAP (
            interrupt => \myUSB:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\myUSB:ep_2\
        PORT MAP (
            interrupt => \myUSB:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\myUSB:ep_3\
        PORT MAP (
            interrupt => \myUSB:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\myUSB:dp_int\
        PORT MAP (
            interrupt => \myUSB:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\myUSB:sof_int\
        PORT MAP (
            interrupt => Net_1 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\myUSB:arb_int\
        PORT MAP (
            interrupt => \myUSB:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\myUSB:bus_reset\
        PORT MAP (
            interrupt => \myUSB:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\myUSB:ep_0\
        PORT MAP (
            interrupt => \myUSB:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\myADC_SEQ:FinalBuf\
        PORT MAP (
            dmareq => \myADC_SEQ:Net_3698\ ,
            termin => zero ,
            termout => \myADC_SEQ:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\myADC_SEQ:TempBuf\
        PORT MAP (
            dmareq => \myADC_SEQ:Net_3830\ ,
            termin => zero ,
            termout => \myADC_SEQ:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = aout0(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => aout0(0)__PA ,
        analog_term => Net_12 ,
        pad => aout0(0)_PAD );
    Properties:
    {
    }

Port 1 contains the following IO cells:
Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = Pin_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_1(0)__PA ,
        analog_term => Net_174 ,
        pad => Pin_1(0)_PAD ,
        pin_input => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Pin_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_2(0)__PA ,
        analog_term => Net_175 ,
        pad => Pin_2(0)_PAD ,
        pin_input => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Pin_3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_3(0)__PA ,
        analog_term => Net_177 ,
        pad => Pin_3(0)_PAD ,
        pin_input => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

Port 3 contains the following IO cells:
Port 12 contains the following IO cells:
Port 15 generates interrupt for logical port:
    logicalport: Name =\myUSB:Dp\
        PORT MAP (
            in_clock_en => one ,
            in_reset => zero ,
            out_clock_en => one ,
            out_reset => zero ,
            interrupt => \myUSB:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "beca5e2d-f70f-4900-a4db-7eca1ed3126e/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=6]: 
Pin : Name = \myUSB:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \myUSB:Dp(0)\__PA ,
        analog_term => \myUSB:Net_1000\ ,
        pad => \myUSB:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \myUSB:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \myUSB:Dm(0)\__PA ,
        analog_term => \myUSB:Net_597\ ,
        pad => \myUSB:Dm(0)_PAD\ );
    Properties:
    {
    }

ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \myADC_SEQ:clock\ ,
            dclk_0 => \myADC_SEQ:clock_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\myUSB:USB\
        PORT MAP (
            dp => \myUSB:Net_1000\ ,
            dm => \myUSB:Net_597\ ,
            sof_int => Net_1 ,
            arb_int => \myUSB:Net_1889\ ,
            usb_int => \myUSB:Net_1876\ ,
            ept_int_8 => \myUSB:ep_int_8\ ,
            ept_int_7 => \myUSB:ep_int_7\ ,
            ept_int_6 => \myUSB:ep_int_6\ ,
            ept_int_5 => \myUSB:ep_int_5\ ,
            ept_int_4 => \myUSB:ep_int_4\ ,
            ept_int_3 => \myUSB:ep_int_3\ ,
            ept_int_2 => \myUSB:ep_int_2\ ,
            ept_int_1 => \myUSB:ep_int_1\ ,
            ept_int_0 => \myUSB:ep_int_0\ ,
            ord_int => \myUSB:Net_95\ ,
            dma_req_7 => \myUSB:dma_request_7\ ,
            dma_req_6 => \myUSB:dma_request_6\ ,
            dma_req_5 => \myUSB:dma_request_5\ ,
            dma_req_4 => \myUSB:dma_request_4\ ,
            dma_req_3 => \myUSB:dma_request_3\ ,
            dma_req_2 => \myUSB:dma_request_2\ ,
            dma_req_1 => \myUSB:dma_request_1\ ,
            dma_req_0 => \myUSB:dma_request_0\ ,
            dma_termin => \myUSB:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: 
    VIDAC Block @ F(VIDAC,2): 
    vidaccell: Name =\myDAC:viDAC8\
        PORT MAP (
            vout => Net_12 ,
            iout => \myDAC:Net_77\ );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\myADC_SEQ:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \myADC_SEQ:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\myADC_SEQ:SAR:ADC_SAR\
        PORT MAP (
            vplus => \myADC_SEQ:Net_2803\ ,
            vminus => \myADC_SEQ:SAR:Net_126\ ,
            ext_pin => \myADC_SEQ:SAR:Net_209\ ,
            vrefhi_out => \myADC_SEQ:SAR:Net_126\ ,
            vref => \myADC_SEQ:SAR:Net_235\ ,
            clk_udb => \myADC_SEQ:clock_local\ ,
            irq => \myADC_SEQ:SAR:Net_252\ ,
            next => Net_172 ,
            data_out_udb_11 => \myADC_SEQ:SAR:Net_207_11\ ,
            data_out_udb_10 => \myADC_SEQ:SAR:Net_207_10\ ,
            data_out_udb_9 => \myADC_SEQ:SAR:Net_207_9\ ,
            data_out_udb_8 => \myADC_SEQ:SAR:Net_207_8\ ,
            data_out_udb_7 => \myADC_SEQ:SAR:Net_207_7\ ,
            data_out_udb_6 => \myADC_SEQ:SAR:Net_207_6\ ,
            data_out_udb_5 => \myADC_SEQ:SAR:Net_207_5\ ,
            data_out_udb_4 => \myADC_SEQ:SAR:Net_207_4\ ,
            data_out_udb_3 => \myADC_SEQ:SAR:Net_207_3\ ,
            data_out_udb_2 => \myADC_SEQ:SAR:Net_207_2\ ,
            data_out_udb_1 => \myADC_SEQ:SAR:Net_207_1\ ,
            data_out_udb_0 => \myADC_SEQ:SAR:Net_207_0\ ,
            eof_udb => \myADC_SEQ:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\myADC_SEQ:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_268 ,
            muxin_62 => Net_267 ,
            muxin_61 => Net_266 ,
            muxin_60 => Net_265 ,
            muxin_59 => Net_264 ,
            muxin_58 => Net_263 ,
            muxin_57 => Net_262 ,
            muxin_56 => Net_261 ,
            muxin_55 => Net_260 ,
            muxin_54 => Net_259 ,
            muxin_53 => Net_258 ,
            muxin_52 => Net_257 ,
            muxin_51 => Net_256 ,
            muxin_50 => Net_255 ,
            muxin_49 => Net_254 ,
            muxin_48 => Net_253 ,
            muxin_47 => Net_252 ,
            muxin_46 => Net_250 ,
            muxin_45 => Net_248 ,
            muxin_44 => Net_247 ,
            muxin_43 => Net_245 ,
            muxin_42 => Net_243 ,
            muxin_41 => Net_242 ,
            muxin_40 => Net_240 ,
            muxin_39 => Net_238 ,
            muxin_38 => Net_237 ,
            muxin_37 => Net_235 ,
            muxin_36 => Net_233 ,
            muxin_35 => Net_232 ,
            muxin_34 => Net_230 ,
            muxin_33 => Net_228 ,
            muxin_32 => Net_227 ,
            muxin_31 => Net_225 ,
            muxin_30 => Net_223 ,
            muxin_29 => Net_222 ,
            muxin_28 => Net_220 ,
            muxin_27 => Net_218 ,
            muxin_26 => Net_217 ,
            muxin_25 => Net_215 ,
            muxin_24 => Net_213 ,
            muxin_23 => Net_212 ,
            muxin_22 => Net_210 ,
            muxin_21 => Net_208 ,
            muxin_20 => Net_207 ,
            muxin_19 => Net_205 ,
            muxin_18 => Net_203 ,
            muxin_17 => Net_202 ,
            muxin_16 => Net_200 ,
            muxin_15 => Net_198 ,
            muxin_14 => Net_197 ,
            muxin_13 => Net_195 ,
            muxin_12 => Net_193 ,
            muxin_11 => Net_192 ,
            muxin_10 => Net_190 ,
            muxin_9 => Net_188 ,
            muxin_8 => Net_187 ,
            muxin_7 => Net_185 ,
            muxin_6 => Net_183 ,
            muxin_5 => Net_182 ,
            muxin_4 => Net_180 ,
            muxin_3 => Net_178 ,
            muxin_2 => Net_177 ,
            muxin_1 => Net_175 ,
            muxin_0 => Net_174 ,
            hw_ctrl_en_63 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \myADC_SEQ:AMuxHw_2_Decoder_one_hot_3\ ,
            vout => \myADC_SEQ:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |               | 
Port | Pin | Fixed |      Type |       Drive Mode |          Name | Connections
-----+-----+-------+-----------+------------------+---------------+------------------------------------------------------------
   0 |   0 |     * |      NONE |      HI_Z_ANALOG |      aout0(0) | Analog(Net_12)
-----+-----+-------+-----------+------------------+---------------+------------------------------------------------------------
   2 |   0 |     * |      NONE |      HI_Z_ANALOG |      Pin_1(0) | In(\myADC_SEQ:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_174)
     |   1 |     * |      NONE |      HI_Z_ANALOG |      Pin_2(0) | In(\myADC_SEQ:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_175)
     |   2 |     * |      NONE |      HI_Z_ANALOG |      Pin_3(0) | In(\myADC_SEQ:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_177)
-----+-----+-------+-----------+------------------+---------------+------------------------------------------------------------
  15 |   6 |       |   FALLING |      HI_Z_ANALOG | \myUSB:Dp(0)\ | Analog(\myUSB:Net_1000\)
     |   7 |       |      NONE |      HI_Z_ANALOG | \myUSB:Dm(0)\ | Analog(\myUSB:Net_597\)
-------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.070ms
Digital Placement phase: Elapsed time ==> 3s.171ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "Design01_r.vh2" --pcf-path "Design01.pco" --des-name "Design01" --dsf-path "Design01.dsf" --sdc-path "Design01.sdc" --lib-path "Design01_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 2s.603ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.253ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.062ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in Design01_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.432ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.232ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 10s.040ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 10s.040ms
API generation phase: Elapsed time ==> 2s.240ms
Dependency generation phase: Elapsed time ==> 0s.042ms
Cleanup phase: Elapsed time ==> 0s.005ms
